valid = [
    ('./valid/array/array.toml', './valid/array/array.json'),
    ('./valid/array/bool.toml', './valid/array/bool.json'),
    ('./valid/array/empty.toml', './valid/array/empty.json'),
    ('./valid/array/hetergeneous.toml', './valid/array/hetergeneous.json'),
    ('./valid/array/mixed-int-array.toml', './valid/array/mixed-int-array.json'),
    ('./valid/array/mixed-int-float.toml', './valid/array/mixed-int-float.json'),
    ('./valid/array/mixed-int-string.toml', './valid/array/mixed-int-string.json'),
    ('./valid/array/mixed-string-table.toml', './valid/array/mixed-string-table.json'),
    ('./valid/array/nested-double.toml', './valid/array/nested-double.json'),
    ('./valid/array/nested-inline-table.toml', './valid/array/nested-inline-table.json'),
    ('./valid/array/nested.toml', './valid/array/nested.json'),
    ('./valid/array/nospaces.toml', './valid/array/nospaces.json'),
    ('./valid/array/string-quote-comma-2.toml', './valid/array/string-quote-comma-2.json'),
    ('./valid/array/string-quote-comma.toml', './valid/array/string-quote-comma.json'),
    ('./valid/array/string-with-comma-2.toml', './valid/array/string-with-comma-2.json'),
    ('./valid/array/string-with-comma.toml', './valid/array/string-with-comma.json'),
    ('./valid/array/strings.toml', './valid/array/strings.json'),
    ('./valid/array/table-array-string-backslash.toml', './valid/array/table-array-string-backslash.json'),
    ('./valid/bool/bool.toml', './valid/bool/bool.json'),
    ('./valid/comment/at-eof.toml', './valid/comment/at-eof.json'),
    ('./valid/comment/at-eof2.toml', './valid/comment/at-eof2.json'),
    ('./valid/comment/everywhere.toml', './valid/comment/everywhere.json'),
    ('./valid/comment/noeol.toml', './valid/comment/noeol.json'),
    ('./valid/comment/nonascii.toml', './valid/comment/nonascii.json'),
    ('./valid/comment/tricky.toml', './valid/comment/tricky.json'),
    ('./valid/datetime/datetime.toml', './valid/datetime/datetime.json'),
    ('./valid/datetime/local-date.toml', './valid/datetime/local-date.json'),
    ('./valid/datetime/local-time.toml', './valid/datetime/local-time.json'),
    ('./valid/datetime/local.toml', './valid/datetime/local.json'),
    ('./valid/datetime/milliseconds.toml', './valid/datetime/milliseconds.json'),
    ('./valid/datetime/no-seconds.toml', './valid/datetime/no-seconds.json'),
    ('./valid/datetime/timezone.toml', './valid/datetime/timezone.json'),
    ('./valid/empty-file.toml', './valid/empty-file.json'),
    ('./valid/example.toml', './valid/example.json'),
    ('./valid/float/exponent.toml', './valid/float/exponent.json'),
    ('./valid/float/float.toml', './valid/float/float.json'),
    ('./valid/float/inf-and-nan.toml', './valid/float/inf-and-nan.json'),
    ('./valid/float/long.toml', './valid/float/long.json'),
    ('./valid/float/underscore.toml', './valid/float/underscore.json'),
    ('./valid/float/zero.toml', './valid/float/zero.json'),
    ('./valid/implicit-and-explicit-after.toml', './valid/implicit-and-explicit-after.json'),
    ('./valid/implicit-and-explicit-before.toml', './valid/implicit-and-explicit-before.json'),
    ('./valid/implicit-groups.toml', './valid/implicit-groups.json'),
    ('./valid/inline-table/array.toml', './valid/inline-table/array.json'),
    ('./valid/inline-table/bool.toml', './valid/inline-table/bool.json'),
    ('./valid/inline-table/empty.toml', './valid/inline-table/empty.json'),
    ('./valid/inline-table/end-in-bool.toml', './valid/inline-table/end-in-bool.json'),
    ('./valid/inline-table/inline-table.toml', './valid/inline-table/inline-table.json'),
    ('./valid/inline-table/key-dotted.toml', './valid/inline-table/key-dotted.json'),
    ('./valid/inline-table/multiline.toml', './valid/inline-table/multiline.json'),
    ('./valid/inline-table/nest.toml', './valid/inline-table/nest.json'),
    ('./valid/inline-table/newline.toml', './valid/inline-table/newline.json'),
    ('./valid/integer/integer.toml', './valid/integer/integer.json'),
    ('./valid/integer/literals.toml', './valid/integer/literals.json'),
    ('./valid/integer/long.toml', './valid/integer/long.json'),
    ('./valid/integer/underscore.toml', './valid/integer/underscore.json'),
    ('./valid/integer/zero.toml', './valid/integer/zero.json'),
    ('./valid/key/alphanum.toml', './valid/key/alphanum.json'),
    ('./valid/key/case-sensitive.toml', './valid/key/case-sensitive.json'),
    ('./valid/key/dotted-empty.toml', './valid/key/dotted-empty.json'),
    ('./valid/key/dotted.toml', './valid/key/dotted.json'),
    ('./valid/key/empty.toml', './valid/key/empty.json'),
    ('./valid/key/equals-nospace.toml', './valid/key/equals-nospace.json'),
    ('./valid/key/escapes.toml', './valid/key/escapes.json'),
    ('./valid/key/numeric-dotted.toml', './valid/key/numeric-dotted.json'),
    ('./valid/key/numeric.toml', './valid/key/numeric.json'),
    ('./valid/key/quoted-dots.toml', './valid/key/quoted-dots.json'),
    ('./valid/key/quoted-unicode.toml', './valid/key/quoted-unicode.json'),
    ('./valid/key/space.toml', './valid/key/space.json'),
    ('./valid/key/special-chars.toml', './valid/key/special-chars.json'),
    ('./valid/key/special-word.toml', './valid/key/special-word.json'),
    ('./valid/key/unicode.toml', './valid/key/unicode.json'),
    ('./valid/newline-crlf.toml', './valid/newline-crlf.json'),
    ('./valid/newline-lf.toml', './valid/newline-lf.json'),
    ('./valid/spec-example-1-compact.toml', './valid/spec-example-1-compact.json'),
    ('./valid/spec-example-1.toml', './valid/spec-example-1.json'),
    ('./valid/spec/array-0.toml', './valid/spec/array-0.json'),
    ('./valid/spec/array-1.toml', './valid/spec/array-1.json'),
    ('./valid/spec/array-of-tables-0.toml', './valid/spec/array-of-tables-0.json'),
    ('./valid/spec/array-of-tables-1.toml', './valid/spec/array-of-tables-1.json'),
    ('./valid/spec/array-of-tables-2.toml', './valid/spec/array-of-tables-2.json'),
    ('./valid/spec/boolean-0.toml', './valid/spec/boolean-0.json'),
    ('./valid/spec/comment-0.toml', './valid/spec/comment-0.json'),
    ('./valid/spec/float-0.toml', './valid/spec/float-0.json'),
    ('./valid/spec/float-1.toml', './valid/spec/float-1.json'),
    ('./valid/spec/float-2.toml', './valid/spec/float-2.json'),
    ('./valid/spec/inline-table-0.toml', './valid/spec/inline-table-0.json'),
    ('./valid/spec/inline-table-1.toml', './valid/spec/inline-table-1.json'),
    ('./valid/spec/inline-table-2.toml', './valid/spec/inline-table-2.json'),
    ('./valid/spec/inline-table-3.toml', './valid/spec/inline-table-3.json'),
    ('./valid/spec/integer-0.toml', './valid/spec/integer-0.json'),
    ('./valid/spec/integer-1.toml', './valid/spec/integer-1.json'),
    ('./valid/spec/integer-2.toml', './valid/spec/integer-2.json'),
    ('./valid/spec/key-value-pair-0.toml', './valid/spec/key-value-pair-0.json'),
    ('./valid/spec/keys-0.toml', './valid/spec/keys-0.json'),
    ('./valid/spec/keys-1.toml', './valid/spec/keys-1.json'),
    ('./valid/spec/keys-3.toml', './valid/spec/keys-3.json'),
    ('./valid/spec/keys-4.toml', './valid/spec/keys-4.json'),
    ('./valid/spec/keys-5.toml', './valid/spec/keys-5.json'),
    ('./valid/spec/keys-6.toml', './valid/spec/keys-6.json'),
    ('./valid/spec/keys-7.toml', './valid/spec/keys-7.json'),
    ('./valid/spec/local-date-0.toml', './valid/spec/local-date-0.json'),
    ('./valid/spec/local-date-time-0.toml', './valid/spec/local-date-time-0.json'),
    ('./valid/spec/local-time-0.toml', './valid/spec/local-time-0.json'),
    ('./valid/spec/offset-date-time-0.toml', './valid/spec/offset-date-time-0.json'),
    ('./valid/spec/offset-date-time-1.toml', './valid/spec/offset-date-time-1.json'),
    ('./valid/spec/string-0.toml', './valid/spec/string-0.json'),
    ('./valid/spec/string-1.toml', './valid/spec/string-1.json'),
    ('./valid/spec/string-2.toml', './valid/spec/string-2.json'),
    ('./valid/spec/string-3.toml', './valid/spec/string-3.json'),
    ('./valid/spec/string-4.toml', './valid/spec/string-4.json'),
    ('./valid/spec/string-5.toml', './valid/spec/string-5.json'),
    ('./valid/spec/string-6.toml', './valid/spec/string-6.json'),
    ('./valid/spec/string-7.toml', './valid/spec/string-7.json'),
    ('./valid/spec/table-0.toml', './valid/spec/table-0.json'),
    ('./valid/spec/table-1.toml', './valid/spec/table-1.json'),
    ('./valid/spec/table-2.toml', './valid/spec/table-2.json'),
    ('./valid/spec/table-3.toml', './valid/spec/table-3.json'),
    ('./valid/spec/table-4.toml', './valid/spec/table-4.json'),
    ('./valid/spec/table-5.toml', './valid/spec/table-5.json'),
    ('./valid/spec/table-6.toml', './valid/spec/table-6.json'),
    ('./valid/spec/table-7.toml', './valid/spec/table-7.json'),
    ('./valid/spec/table-8.toml', './valid/spec/table-8.json'),
    ('./valid/spec/table-9.toml', './valid/spec/table-9.json'),
    ('./valid/string/double-quote-escape.toml', './valid/string/double-quote-escape.json'),
    ('./valid/string/empty.toml', './valid/string/empty.json'),
    ('./valid/string/escape-esc.toml', './valid/string/escape-esc.json'),
    ('./valid/string/escape-tricky.toml', './valid/string/escape-tricky.json'),
    ('./valid/string/escaped-escape.toml', './valid/string/escaped-escape.json'),
    ('./valid/string/escapes.toml', './valid/string/escapes.json'),
    ('./valid/string/hex-escape.toml', './valid/string/hex-escape.json'),
    ('./valid/string/multiline-escaped-crlf.toml', './valid/string/multiline-escaped-crlf.json'),
    ('./valid/string/multiline-quotes.toml', './valid/string/multiline-quotes.json'),
    ('./valid/string/multiline.toml', './valid/string/multiline.json'),
    ('./valid/string/nl.toml', './valid/string/nl.json'),
    ('./valid/string/quoted-unicode.toml', './valid/string/quoted-unicode.json'),
    ('./valid/string/raw-multiline.toml', './valid/string/raw-multiline.json'),
    ('./valid/string/raw.toml', './valid/string/raw.json'),
    ('./valid/string/simple.toml', './valid/string/simple.json'),
    ('./valid/string/unicode-escape.toml', './valid/string/unicode-escape.json'),
    ('./valid/string/unicode-literal.toml', './valid/string/unicode-literal.json'),
    ('./valid/string/with-pound.toml', './valid/string/with-pound.json'),
    ('./valid/table/array-implicit-and-explicit-after.toml', './valid/table/array-implicit-and-explicit-after.json'),
    ('./valid/table/array-implicit.toml', './valid/table/array-implicit.json'),
    ('./valid/table/array-many.toml', './valid/table/array-many.json'),
    ('./valid/table/array-nest.toml', './valid/table/array-nest.json'),
    ('./valid/table/array-one.toml', './valid/table/array-one.json'),
    ('./valid/table/array-table-array.toml', './valid/table/array-table-array.json'),
    ('./valid/table/array-within-dotted.toml', './valid/table/array-within-dotted.json'),
    ('./valid/table/empty-name.toml', './valid/table/empty-name.json'),
    ('./valid/table/empty.toml', './valid/table/empty.json'),
    ('./valid/table/keyword.toml', './valid/table/keyword.json'),
    ('./valid/table/names.toml', './valid/table/names.json'),
    ('./valid/table/no-eol.toml', './valid/table/no-eol.json'),
    ('./valid/table/sub-empty.toml', './valid/table/sub-empty.json'),
    ('./valid/table/sub.toml', './valid/table/sub.json'),
    ('./valid/table/whitespace.toml', './valid/table/whitespace.json'),
    ('./valid/table/with-literal-string.toml', './valid/table/with-literal-string.json'),
    ('./valid/table/with-pound.toml', './valid/table/with-pound.json'),
    ('./valid/table/with-single-quotes.toml', './valid/table/with-single-quotes.json'),
    ('./valid/table/without-super.toml', './valid/table/without-super.json')
]

invalid = [
    './invalid/array/double-comma-1.toml',
    './invalid/array/double-comma-2.toml',
    './invalid/array/extending-table.toml',
    './invalid/array/missing-separator.toml',
    './invalid/array/no-close-2.toml',
    './invalid/array/no-close-table-2.toml',
    './invalid/array/no-close-table.toml',
    './invalid/array/no-close.toml',
    './invalid/array/tables-1.toml',
    './invalid/array/tables-2.toml',
    './invalid/array/text-after-array-entries.toml',
    './invalid/array/text-before-array-separator.toml',
    './invalid/array/text-in-array.toml',
    './invalid/bool/almost-false-with-extra.toml',
    './invalid/bool/almost-false.toml',
    './invalid/bool/almost-true-with-extra.toml',
    './invalid/bool/almost-true.toml',
    './invalid/bool/just-f.toml',
    './invalid/bool/just-t.toml',
    './invalid/bool/mixed-case.toml',
    './invalid/bool/starting-same-false.toml',
    './invalid/bool/starting-same-true.toml',
    './invalid/bool/wrong-case-false.toml',
    './invalid/bool/wrong-case-true.toml',
    './invalid/control/bare-cr.toml',
    './invalid/control/bare-formfeed.toml',
    './invalid/control/bare-null.toml',
    './invalid/control/bare-vertical-tab.toml',
    './invalid/control/comment-cr.toml',
    './invalid/control/comment-del.toml',
    './invalid/control/comment-lf.toml',
    './invalid/control/comment-null.toml',
    './invalid/control/comment-us.toml',
    './invalid/control/control.multi',
    './invalid/control/multi-del.toml',
    './invalid/control/multi-lf.toml',
    './invalid/control/multi-null.toml',
    './invalid/control/multi-us.toml',
    './invalid/control/rawmulti-del.toml',
    './invalid/control/rawmulti-lf.toml',
    './invalid/control/rawmulti-null.toml',
    './invalid/control/rawmulti-us.toml',
    './invalid/control/rawstring-del.toml',
    './invalid/control/rawstring-lf.toml',
    './invalid/control/rawstring-null.toml',
    './invalid/control/rawstring-us.toml',
    './invalid/control/string-bs.toml',
    './invalid/control/string-del.toml',
    './invalid/control/string-lf.toml',
    './invalid/control/string-null.toml',
    './invalid/control/string-us.toml',
    './invalid/datetime/hour-over.toml',
    './invalid/datetime/mday-over.toml',
    './invalid/datetime/mday-under.toml',
    './invalid/datetime/minute-over.toml',
    './invalid/datetime/month-over.toml',
    './invalid/datetime/month-under.toml',
    './invalid/datetime/no-leads-with-milli.toml',
    './invalid/datetime/no-leads.toml',
    './invalid/datetime/no-secs.toml',
    './invalid/datetime/no-t.toml',
    './invalid/datetime/second-over.toml',
    './invalid/datetime/time-no-leads-2.toml',
    './invalid/datetime/time-no-leads.toml',
    './invalid/datetime/trailing-t.toml',
    './invalid/encoding/bad-codepoint.toml',
    './invalid/encoding/bad-utf8-at-end.toml',
    './invalid/encoding/bad-utf8-in-comment.toml',
    './invalid/encoding/bad-utf8-in-multiline-literal.toml',
    './invalid/encoding/bad-utf8-in-multiline.toml',
    './invalid/encoding/bad-utf8-in-string-literal.toml',
    './invalid/encoding/bad-utf8-in-string.toml',
    './invalid/encoding/bom-not-at-start-1.toml',
    './invalid/encoding/bom-not-at-start-2.toml',
    './invalid/encoding/utf16-bom.toml',
    './invalid/encoding/utf16.toml',
    './invalid/float/double-point-1.toml',
    './invalid/float/double-point-2.toml',
    './invalid/float/exp-double-e-1.toml',
    './invalid/float/exp-double-e-2.toml',
    './invalid/float/exp-double-us.toml',
    './invalid/float/exp-leading-us.toml',
    './invalid/float/exp-point-1.toml',
    './invalid/float/exp-point-2.toml',
    './invalid/float/exp-trailing-us.toml',
    './invalid/float/float.multi',
    './invalid/float/inf-capital.toml',
    './invalid/float/inf-incomplete-1.toml',
    './invalid/float/inf-incomplete-2.toml',
    './invalid/float/inf-incomplete-3.toml',
    './invalid/float/inf_underscore.toml',
    './invalid/float/leading-point-neg.toml',
    './invalid/float/leading-point-plus.toml',
    './invalid/float/leading-point.toml',
    './invalid/float/leading-us.toml',
    './invalid/float/leading-zero-neg.toml',
    './invalid/float/leading-zero-plus.toml',
    './invalid/float/leading-zero.toml',
    './invalid/float/nan-capital.toml',
    './invalid/float/nan-incomplete-1.toml',
    './invalid/float/nan-incomplete-2.toml',
    './invalid/float/nan-incomplete-3.toml',
    './invalid/float/nan_underscore.toml',
    './invalid/float/trailing-point-min.toml',
    './invalid/float/trailing-point-plus.toml',
    './invalid/float/trailing-point.toml',
    './invalid/float/trailing-us-exp.toml',
    './invalid/float/trailing-us.toml',
    './invalid/float/us-after-point.toml',
    './invalid/float/us-before-point.toml',
    './invalid/inline-table/add.toml',
    './invalid/inline-table/bad-key-syntax.toml',
    './invalid/inline-table/dotted-key-conflict.toml',
    './invalid/inline-table/double-comma.toml',
    './invalid/inline-table/duplicate-key.toml',
    './invalid/inline-table/empty.toml',
    './invalid/inline-table/linebreak-1.toml',
    './invalid/inline-table/linebreak-2.toml',
    './invalid/inline-table/linebreak-3.toml',
    './invalid/inline-table/linebreak-4.toml',
    './invalid/inline-table/nested_key_conflict.toml',
    './invalid/inline-table/no-comma.toml',
    './invalid/inline-table/overwrite.toml',
    './invalid/inline-table/trailing-comma.toml',
    './invalid/integer/capital-bin.toml',
    './invalid/integer/capital-hex.toml',
    './invalid/integer/capital-oct.toml',
    './invalid/integer/double-sign-nex.toml',
    './invalid/integer/double-sign-plus.toml',
    './invalid/integer/double-us.toml',
    './invalid/integer/incomplete-bin.toml',
    './invalid/integer/incomplete-hex.toml',
    './invalid/integer/incomplete-oct.toml',
    './invalid/integer/integer.multi',
    './invalid/integer/invalid-bin.toml',
    './invalid/integer/invalid-hex.toml',
    './invalid/integer/invalid-oct.toml',
    './invalid/integer/leading-us-bin.toml',
    './invalid/integer/leading-us-hex.toml',
    './invalid/integer/leading-us-oct.toml',
    './invalid/integer/leading-us.toml',
    './invalid/integer/leading-zero-1.toml',
    './invalid/integer/leading-zero-2.toml',
    './invalid/integer/leading-zero-3.toml',
    './invalid/integer/leading-zero-sign-1.toml',
    './invalid/integer/leading-zero-sign-2.toml',
    './invalid/integer/leading-zero-sign-3.toml',
    './invalid/integer/negative-bin.toml',
    './invalid/integer/negative-hex.toml',
    './invalid/integer/negative-oct.toml',
    './invalid/integer/positive-bin.toml',
    './invalid/integer/positive-hex.toml',
    './invalid/integer/positive-oct.toml',
    './invalid/integer/text-after-integer.toml',
    './invalid/integer/trailing-us-bin.toml',
    './invalid/integer/trailing-us-hex.toml',
    './invalid/integer/trailing-us-oct.toml',
    './invalid/integer/trailing-us.toml',
    './invalid/integer/us-after-bin.toml',
    './invalid/integer/us-after-hex.toml',
    './invalid/integer/us-after-oct.toml',
    './invalid/key/after-array.toml',
    './invalid/key/after-table.toml',
    './invalid/key/after-value.toml',
    './invalid/key/bare-invalid-character.toml',
    './invalid/key/dotted-redefine-table.toml',
    './invalid/key/duplicate-keys.toml',
    './invalid/key/duplicate.toml',
    './invalid/key/empty.toml',
    './invalid/key/escape.toml',
    './invalid/key/hash.toml',
    './invalid/key/multiline.toml',
    './invalid/key/newline.toml',
    './invalid/key/no-eol.toml',
    './invalid/key/open-bracket.toml',
    './invalid/key/partial-quoted.toml',
    './invalid/key/quoted-unclosed-1.toml',
    './invalid/key/quoted-unclosed-2.toml',
    './invalid/key/single-open-bracket.toml',
    './invalid/key/space.toml',
    './invalid/key/special-character.toml',
    './invalid/key/start-bracket.toml',
    './invalid/key/start-dot.toml',
    './invalid/key/two-equals.toml',
    './invalid/key/two-equals2.toml',
    './invalid/key/two-equals3.toml',
    './invalid/key/without-value-1.toml',
    './invalid/key/without-value-2.toml',
    './invalid/key/without-value-3.toml',
    './invalid/key/without-value-4.toml',
    './invalid/spec/inline-table-2-0.toml',
    './invalid/spec/inline-table-3-0.toml',
    './invalid/spec/key-value-pair-1.toml',
    './invalid/spec/keys-2.toml',
    './invalid/spec/string-4-0.toml',
    './invalid/spec/string-7-0.toml',
    './invalid/spec/table-9-0.toml',
    './invalid/spec/table-9-1.toml',
    './invalid/string/bad-byte-escape.toml',
    './invalid/string/bad-codepoint.toml',
    './invalid/string/bad-concat.toml',
    './invalid/string/bad-escape-1.toml',
    './invalid/string/bad-escape-2.toml',
    './invalid/string/bad-hex-esc-1.toml',
    './invalid/string/bad-hex-esc-2.toml',
    './invalid/string/bad-hex-esc-3.toml',
    './invalid/string/bad-hex-esc-4.toml',
    './invalid/string/bad-hex-esc-5.toml',
    './invalid/string/bad-hex-esc.multi',
    './invalid/string/bad-multiline.toml',
    './invalid/string/bad-slash-escape.toml',
    './invalid/string/bad-uni-esc-1.toml',
    './invalid/string/bad-uni-esc-2.toml',
    './invalid/string/bad-uni-esc-3.toml',
    './invalid/string/bad-uni-esc-4.toml',
    './invalid/string/bad-uni-esc-5.toml',
    './invalid/string/basic-byte-escapes.toml',
    './invalid/string/basic-multiline-out-of-range-unicode-escape-1.toml',
    './invalid/string/basic-multiline-out-of-range-unicode-escape-2.toml',
    './invalid/string/basic-multiline-quotes.toml',
    './invalid/string/basic-multiline-unknown-escape.toml',
    './invalid/string/basic-out-of-range-unicode-escape-1.toml',
    './invalid/string/basic-out-of-range-unicode-escape-2.toml',
    './invalid/string/basic-unknown-escape.toml',
    './invalid/string/literal-multiline-quotes-1.toml',
    './invalid/string/literal-multiline-quotes-2.toml',
    './invalid/string/missing-quotes.toml',
    './invalid/string/multiline-bad-escape-1.toml',
    './invalid/string/multiline-bad-escape-2.toml',
    './invalid/string/multiline-bad-escape-3.toml',
    './invalid/string/multiline-escape-space.toml',
    './invalid/string/multiline-no-close-2.toml',
    './invalid/string/multiline-no-close.toml',
    './invalid/string/multiline-quotes-1.toml',
    './invalid/string/no-close.toml',
    './invalid/string/text-after-string.toml',
    './invalid/string/wrong-close.toml',
    './invalid/table/append-to-array-with-dotted-keys.toml',
    './invalid/table/append-with-dotted-keys-1.toml',
    './invalid/table/append-with-dotted-keys-2.toml',
    './invalid/table/array-empty.toml',
    './invalid/table/array-implicit.toml',
    './invalid/table/array-missing-bracket.toml',
    './invalid/table/duplicate-key-dotted-array.toml',
    './invalid/table/duplicate-key-dotted-table.toml',
    './invalid/table/duplicate-key-dotted-table2.toml',
    './invalid/table/duplicate-key-table.toml',
    './invalid/table/duplicate-table-array.toml',
    './invalid/table/duplicate-table-array2.toml',
    './invalid/table/duplicate.toml',
    './invalid/table/empty-implicit-table.toml',
    './invalid/table/empty.toml',
    './invalid/table/equals-sign.toml',
    './invalid/table/llbrace.toml',
    './invalid/table/nested-brackets-close.toml',
    './invalid/table/nested-brackets-open.toml',
    './invalid/table/quoted-no-close.toml',
    './invalid/table/redefine.toml',
    './invalid/table/rrbrace.toml',
    './invalid/table/text-after-table.toml',
    './invalid/table/whitespace.toml',
    './invalid/table/with-pound.toml'
]

with open('_test.py','w') as f:
    file = '''import unittest
import os
import sys
import json

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src')))
from grammar import parser

def parseBool(string):
    if string == 'true':
        return True
    elif string == 'false':
        return False
    else:
        raise ValueError()

def parseInt(string):
    return int(string)

def parseFloat(string):
    return float(string)

def parseVal(string):
    try:
        return parseInt(string)
    except:
        try:
            return parseFloat(string)
        except:
            try:
                return parseBool(string)
            except:
                return string

def convert_dict(input_dict):
    output_dict = {}
    for key, value in input_dict.items():
        if isinstance(value, list):
            output_dict[key] = [parseVal(item['value']) for item in value]
        else:
            output_dict[key] = parseVal(value)
    return output_dict

class Tests(unittest.TestCase):
'''
    for i in range(1,len(valid)+1):
        file += f'''
    def test_{i}(self):
        with open(os.path.abspath(os.path.join(os.path.dirname(__file__), '.', '{valid[i-1][0]}'))) as f_test:
            with open(os.path.abspath(os.path.join(os.path.dirname(__file__), '.', '{valid[i-1][1]}'))) as f_result:
                correct = convert_dict(json.load(f_result))
                parser.parse(f_test.read())
                test = parser.result
                self.assertEqual(test,correct)
'''
    f.write(file)